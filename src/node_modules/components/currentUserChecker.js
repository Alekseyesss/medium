import { useContext, useEffect } from "react";
import useFetch from "hooks/useFetch"
import { CurrentUserContext } from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({ children }) => {
  const [{ response }, doFetch] = useFetch('user')
  const [, setCurrentUserState] = useContext(CurrentUserContext)
  const [token] = useLocalStorage('token')

  useEffect(() => {
    if (!token) {
      setCurrentUserState(
        state => {
          return {
            ...state,
            isLoggedIn: false
          }
        }
      )
      return
    }

    doFetch()
    setCurrentUserState(
      state => {
        return {
          ...state,
          isLoading: true
        }
      }
    )
  }, [])

  useEffect(() => {
    if (!response) {
      return
    }

    setCurrentUserState(state => {
      return {
        ...state,
        isLoggedIn: true,
        isLoading: false,
        currentUser: response.user
      }
    })
  }, [response])

  return children
}

export default CurrentUserChecker